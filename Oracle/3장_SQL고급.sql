/*
    날짜 20250715
    이름 최민수
    내용 3장 SQL 고급
*/

-- 실습하기 3-1. 테이블 생성 및 데이터 입력

CREATE TABLE EMP (
    EMPNO   NUMBER(4) PRIMARY KEY,
    NAME    VARCHAR2(20) NOT NULL,
    GENDER  CHAR(1) NOT NULL,
    JOB     VARCHAR(20) NOT NULL,
    DEPNO   NUMBER(2),
    REGDATE DATE NOT NULL
);

CREATE TABLE DEPT (
    DEPTNO  NUMBER(2) PRIMARY KEY,
    DNAME   VARCHAR2(20) NOT NULL,
    DTEL    VARCHAR2(12) NOT NULL
);

CREATE TABLE SALE (
    NO      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMPNO   NUMBER(4) NOT NULL,
    YEAR    NUMBER(4) NOT NULL,
    MONTH   NUMBER(2) NOT NULL,
    PRICE   NUMBER(10)
);

// 직원 테이블 데이터 입력

INSERT INTO EMP VALUES (1001, '김유신', 'M', '사원', 10, SYSDATE);
INSERT INTO EMP VALUES (1002, '김춘추', 'M', '대리', 20, SYSDATE);
INSERT INTO EMP VALUES (1003, '장보고', 'M', '과장', 10, SYSDATE);
INSERT INTO EMP VALUES (1004, '강감찬', 'M', '부장', 30, SYSDATE);
INSERT INTO EMP VALUES (1005, '신사임당', 'F', '대리', 20, SYSDATE);
INSERT INTO EMP VALUES (1006, '이황', 'M', '사원', 40, SYSDATE);
INSERT INTO EMP VALUES (1007, '이이', 'M', '과장', 20, SYSDATE);
INSERT INTO EMP VALUES (1008, '이순신', 'M', '사원', NULL, SYSDATE);
INSERT INTO EMP VALUES (1009, '허난설헌', 'F', '사원', NULL, SYSDATE);
INSERT INTO EMP VALUES (1010, '정약용', 'M', '대리', 50, SYSDATE);

// 부서 테이블 데이터 입력
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (10, '영업1부', '051-511-1000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (20, '영업2부', '051-511-2000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (30, '영업3부', '051-511-3000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (40, '영업4부', '051-511-4000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (50, '영업지원부', '051-511-5000');

// 매출 테이블 데이터 입력
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2023, 1, 98100);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2023, 1, 136000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2023, 1, 80000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2023, 1, 78000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2023, 1, NULL);

INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2023, 2, 23500);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2023, 2, 126000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2023, 2, 18500);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2023, 2, 19000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1010, 2023, 2, 53000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2024, 1, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2024, 1, 109000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2024, 1, 80000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2024, 1, NULL);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1007, 2024, 1, 24000);

INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2024, 2, 160000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2024, 2, 101000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2024, 2, 43000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2024, 2, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1006, 2024, 2, 109000);

// 실습하기 조회
SELECT * FROM DEPT WHERE DTEL LIKE '051-%';
SELECT * FROM EMP WHERE DEPNO IN(10, 12, 13);
SELECT * FROM EMP WHERE NAME != '김춘추';

-- 숫자 함수 실습
SELECT SUM(PRICE) 합계 FROM SALE;
SELECT COUNT(*) 직원수 FROM EMP; --튜플 갯수(NULL 포함 다 세어봄)
SELECT COUNT(EMPNO) FROM EMP; --해당 열의 튜플 수(NULL 제외)
SELECT COUNT(DEPNO) FROM EMP;

SELECT CEIL(1.1) FROM DUAL; -- 올림(소수점 올려 제거) & DUAL=가상 테이블
SELECT FLOOR(1.1) FROM DUAL; -- 내림(소수점 내려 제거)
SELECT ROUND(1.8) FROM DUAL;

SELECT DBMS_RAMDOM.VALUE FROM DUAL; -- DBMS_RAMDOM.VALUE = 기본제공 랜덤함수
SELECT DBMS_RANDOM.VALUE FROM DUAL;
SELECT CEIL(DBMS_RANDOM.VALUE*10) FROM DUAL;

SELECT 'Hello ORACLE!', LENGTH('HELLO ORACLE!') FROM DUAL;
SELECT
    'HELLO ORACLE!',
    SUBSTR('HELLO ORACLE!', 1, 3),
    SUBSTR('HELLO ORACLE!', 3, 2),
    SUBSTR('HELLO ORACLE!', 5)
FROM 
    DUAL;

SELECT
    INSTR('HELLO ORACLE!', 'L') INSTR_1,
    INSTR('HELLO ORACLE!', 'L', -1) INSTR_2
FROM
    DUAL;
    
SELECT '010-1234-5678', REPLACE('010-1234-5678', '-', '') FROM DUAL;
SELECT LPAD('ORACLE', 7, '#') LPAD, RPAD('ORACLE', 10, '*') RPAD FROM DUAL;
SELECT CONCAT(EMPNO, NAME) FROM EMP WHERE NAME = '이순신';
SELECT EMPNO || NAME FROM EMP WHERE NAME = '정약용';

SELECT
    '[ ORACLE ]' BEFORE,
    '[' || TRIM(' ORACEL ')||']' TRIM
FROM
    DUAL;
    
SELECT
    SYSDATE,
    SYSDATE -1,
    SYSDATE +1
FROM
    DUAL;
    
SELECT
    ADD_MONTHS(SYSDATE, 1),
    ADD_MONTHS(SYSDATE, -1)
FROM
    DUAL;
//MONTHS_BETWEEN(DATE '2025-07-13', DATE '2024-07-13') 개월차

SELECT
    MONTHS_BETWEEN(ADD_MONTHS(SYSDATE,0), ADD_MONTHS(SYSDATE,-10)) 개월차
FROM
    DUAL;

SELECT
    NEXT_DAY(SYSDATE, '월요일') 다음_월요일
FROM
    DUAL;
    
SELECT
    TO_CHAR(SYSDATE, 'YYYY') YYYY,
    TO_CHAR(SYSDATE, 'MM') MM,
    TO_CHAR(SYSDATE, 'DD') DD,
    TO_CHAR(SYSDATE, 'HH24') HH24,
    TO_CHAR(SYSDATE, 'MI') MI,
    TO_CHAR(SYSDATE, 'SS') SS,
    TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') 날짜시간
FROM
    DUAL;
    
INSERT INTO EMP VALUES (1011, '안중근', 'M', '부장', 30, TO_CHAR(SYSDATE, 'YYYY/MM/DD'));

SELECT
    TO_DATE('20250714', 'YYYY/MM/DD') 날짜1,
    TO_DATE('250714', 'YY-MM-DD') 날짜2,
    TO_DATE(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') 날짜시간
FROM 
    DUAL;

INSERT INTO EMP VALUES (1014, '유관순', 'F', '차장', 20, SYSDATE);
INSERT INTO EMP VALUES (1013, '윤봉길', 'M', '과장', 30, 
                        TO_DATE(SYSDATE,'YYYY-MM-DD HH24:MI:SS'));

SELECT
    NO, EMPNO, YEAR, MONTH, NVL(PRICE, 0)
FROM SALE;

SELECT
    EMPNO, NAME, GENDER, JOB, NVL2(DEPNO, '정규직', '비정규직')
FROM EMP;

SELECT COUNT(YEAR), YEAR FROM SALE GROUP BY YEAR;
SELECT YEAR FROM SALE GROUP BY YEAR;

SELECT EMPNO, YEAR FROM SALE GROUP BY EMPNO, YEAR;


SELECT EMPNO, COUNT(*) 판매건수 FROM SALE GROUP BY EMPNO ORDER BY 판매건수 DESC;
SELECT EMPNO, SUM(PRICE) 합계 FROM SALE 
    GROUP BY EMPNO
    ORDER BY 합계 DESC;
    
SELECT EMPNO, YEAR, SUM(PRICE) 합계
    FROM SALE
    GROUP BY YEAR, EMPNO;

SELECT EMPNO, YEAR, SUM(PRICE) 합계
    FROM SALE
    WHERE PRICE >= 50000
    GROUP BY EMPNO, YEAR
    HAVING SUM(PRICE) >= 200000
    ORDER BY 합계 DESC;

SELECT EMPNO, MONTH, PRICE, YEAR FROM SALE WHERE YEAR = 2023
UNION
SELECT EMPNO, MONTH, PRICE, YEAR FROM SALE WHERE YEAR = 2024;


SELECT EMPNO, MONTH, PRICE FROM SALE WHERE YEAR = 2023
UNION ALL
SELECT EMPNO, MONTH, PRICE FROM SALE WHERE YEAR = 2024;

SELECT EMPNO, YEAR, SUM(PRICE) 합계
FROM SALE
WHERE YEAR = 2023
GROUP BY EMPNO, YEAR
UNION
SELECT EMPNO, YEAR, SUM(PRICE) 합계
FROM SALE
WHERE YEAR = 2024
GROUP BY EMPNO, YEAR
ORDER BY YEAR ASC, 합계 DESC;

SELECT EMPNO FROM SALE WHERE YEAR = 2023
INTERSECT
SELECT EMPNO FROM SALE WHERE YEAR = 2024;

SELECT EMPNO FROM SALE WHERE YEAR = 2023
MINUS
SELECT EMPNO FROM SALE WHERE YEAR = 2024;

////////////////////////////////  J
////////////////////////////////  O
////////////////////////////////  I
////////////////////////////////  N

SELECT * FROM EMP E
JOIN DEPT D
ON E.depno = D.DEPTNO;

SELECT * FROM EMP E
JOIN DEPT D
USING (DEPTNO); // 안되는거

SELECT *
FROM EMP E, DEPT D
WHERE E.DEPNO = d.deptno; // E.오타 수정

SELECT
    S.NO, S.EMPNO,
    E.NAME, e.job, e.regdate, e.depno,
    d.dname
FROM SALE S
JOIN EMP E ON S.EMPNO = E.EMPNO
JOIN DEPT D ON E.DEPNO = D.DEPTNO
WHERE PRICE > 100000 AND YEAR = 2024
ORDER BY S.PRICE DESC;

////////////////////////////////  J
////////////////////////////////  O
////////////////////////////////  I
////////////////////////////////  N
////////////////////////////////  2

SELECT * FROM SALE S
    LEFT JOIN EMP E ON s.empno = e.empno;
    
SELECT * FROM SALE S
    RIGHT JOIN EMP E ON S.EMPNO = E.EMPNO;














    



